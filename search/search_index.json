{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to RadiantOne Cloud Native Lab","text":"<p>A complete guide to run RadiantOne platform in docker and kubernetes.</p> <p>This lab is divided into four sections:</p> <ul> <li>Docker</li> <li>Docker Compose</li> <li>Kubernetes</li> <li>Helm</li> </ul> <p>Make sure that all the prerequistes are completed. Commands from each section can be copied and run directly. Some optional steps can be skipped.</p> <p>Please generate a PR if any changes need to be made to this lab.</p>"},{"location":"cfs/","title":"Cfs","text":"<ul> <li>Follow the instructions here to run CFS in a docker container.</li> <li>CFS container can only run on Windows hosts with Hyper-V enabled and Docker experimental features enabled.</li> </ul>"},{"location":"custom-docker/","title":"Custom Images","text":"<ul> <li>Follow the instructions here to buld custom docker images.</li> </ul>"},{"location":"docker-cheatsheet/","title":"Docker","text":""},{"location":"docker-cheatsheet/#docker-compose","title":"Docker-Compose","text":"<p>Usage:</p> <pre><code>docker-compose &lt;command&gt;\n</code></pre> <p>Docker Compose Up:</p> <p>Builds, (re)creates, starts, and attaches to containers for a service</p> <pre><code>Usage: docker-compose up [options] [--scale SERVICE=NUM...] [SERVICE...]\n\nOptions:\n    -d, --detach               Detached mode: Run containers in the background,\n                               print new container names. Incompatible with\n                               --abort-on-container-exit.\n    --no-color                 Produce monochrome output.\n    --quiet-pull               Pull without printing progress information\n    --no-deps                  Don't start linked services.\n    --force-recreate           Recreate containers even if their configuration\n                               and image haven't changed.\n    --always-recreate-deps     Recreate dependent containers.\n                               Incompatible with --no-recreate.\n    --no-recreate              If containers already exist, don't recreate\n                               them. Incompatible with --force-recreate and \n                               --renew-anon-volumes.\n    --no-build                 Don't build an image, even if it's missing.\n    --no-start                 Don't start the services after creating them.\n    --build                    Build images before starting containers.\n    --abort-on-container-exit  Stops all containers if any container was\n                               stopped. Incompatible with --detach.\n    --attach-dependencies      Attach to dependent containers.\n    -t, --timeout TIMEOUT      Use this timeout in seconds for container\n                               shutdown when attached or when containers are\n                               already running. (default: 10)\n    -V, --renew-anon-volumes   Recreate anonymous volumes instead of retrieving\n                               data from the previous containers.\n    --remove-orphans           Remove containers for services not defined\n                               in the Compose file.\n    --exit-code-from SERVICE   Return the exit code of the selected service\n                               container. Implies --abort-on-container-exit.\n    --scale SERVICE=NUM        Scale SERVICE to NUM instances. Overrides the\n                               `scale` setting in the Compose file if present.\n</code></pre> <p>Docker Compose Down:</p> <pre><code>docker-compose down [options]\nOptions:\n    --rmi type              Remove images. Type must be one of:\n                              'all': Remove all images used by any service.\n                              'local': Remove only images that don't have a\n                              custom tag set by the `image` field.\n    -v, --volumes           Remove named volumes declared in the `volumes`\n                            section of the Compose file and anonymous volumes\n                            attached to containers.\n    --remove-orphans        Remove containers for services not defined in the\n                            Compose file\n    -t, --timeout TIMEOUT   Specify a shutdown timeout in seconds.\n                            (default: 10)\n</code></pre> <p>Docker Compose Start:</p> <p>Starts existing containers for a service</p> <pre><code>docker-compose docker-compose start [SERVICE...]\n</code></pre> <p>Docker Compose Stop:</p> <p>Stops running containers without removing them. They can be started again with docker-compose start.</p> <pre><code>Usage: docker-compose stop [options] [SERVICE...]\n\nOptions:\n  -t, --timeout TIMEOUT      Specify a shutdown timeout in seconds.\n                             (default: 10)\n</code></pre> <p>Docker Compose Pull:</p> <p>Pulls an image associated with a service defined in a docker-compose.yml or docker-stack.yml file, but does not start containers based on those images.</p> <pre><code>docker-compose pull [options] [SERVICE...]\n\nOptions:\n    --ignore-pull-failures  Pull what it can and ignores images with pull failures.\n    --parallel              Deprecated, pull multiple images in parallel (enabled by default).\n    --no-parallel           Disable parallel pulling.\n    -q, --quiet             Pull without printing progress information\n    --include-deps          Also pull services declared as dependencies\n</code></pre> <p>Docker Compose Events:</p> <p>Stream container events for every container in the project.</p> <pre><code>docker-compose events [SERVICE...]\n</code></pre>"},{"location":"docker-compose/","title":"Docker Compose","text":""},{"location":"docker-compose/#before-you-start","title":"Before you start","text":"<ul> <li>FID or Zookeeper running locally on your machine are stopped.</li> <li>All containers from previous section are stopped and removed</li> </ul> <pre><code>docker ps -a\ndocker container prune\n</code></pre> <p>Clone the docker-compose samples repo</p> <pre><code>git clone https://github.com/radiantlogic-devops/docker-compose.git\n</code></pre>"},{"location":"docker-compose/#standalone-fid","title":"Standalone FID","text":"<ul> <li>Change to 00-standalone folder</li> <li>Edit .env file and set the values </li> </ul> <pre><code># Example .env file\nFID_VERSION=7.4.0\nCLUSTER_NAME=docker-cluster-2\nLICENSE=PASTE_YOUR_LICENSE_HERE\n</code></pre> <pre><code>cd 00-standalone\n</code></pre>"},{"location":"docker-compose/#run","title":"run","text":"<p>This will run the containers in background</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"docker-compose/#status","title":"status","text":"<p>From the same folder run this command. This will show the status.</p> <pre><code>docker-compose ps\n</code></pre> <p>When the container shows healthy status, access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre> <pre><code>docker-compose down -v\n</code></pre>"},{"location":"docker-compose/#cluster-fid-external-zookeeper","title":"Cluster FID + External Zookeeper","text":""},{"location":"docker-compose/#external-zookeeper-ensemble","title":"External Zookeeper ensemble","text":"<ul> <li>Change to 03-external-zk folder</li> </ul> <pre><code>cd 03-external-zk\n</code></pre>"},{"location":"docker-compose/#run_1","title":"run","text":"<p>This will run the containers in background</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"docker-compose/#status_1","title":"status","text":"<p>From the same folder run this command. This will show the status.</p> <pre><code>docker-compose ps\n</code></pre> <p>When the container shows healthy status, proceed to next step</p>"},{"location":"docker-compose/#fid-cluster","title":"FID Cluster","text":"<ul> <li>Change to 02-cluster-ext-zk folder</li> </ul> <pre><code>cd 02-cluster-ext-zk\n</code></pre> <ul> <li>Edit .env file and set the values </li> </ul> <pre><code># Example .env file\nFID_VERSION=7.4.0\nCLUSTER_NAME=docker-cluster-3\nLICENSE=PASTE_YOUR_LICENSE_HERE\n</code></pre>"},{"location":"docker-compose/#run_2","title":"run","text":"<p>This will run the containers in background</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"docker-compose/#status_2","title":"status","text":"<p>From the same folder run this command. This will show the status.</p> <pre><code>docker-compose ps\n</code></pre> <p>When the container shows healthy status, access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre>"},{"location":"docker-compose/#cleanup","title":"Cleanup","text":"<pre><code>cd 02-cluster-ext-zk\ndocker-compose down -v\n</code></pre> <pre><code>cd 03-external-zk\ndocker-compose down -v\n</code></pre>"},{"location":"docker/","title":"Docker","text":""},{"location":"docker/#before-you-start","title":"Before you start","text":"<ul> <li>FID or Zookeeper running locally on your machine are stopped.</li> <li>Copy these commands in a notepad and replace the license key.</li> </ul>"},{"location":"docker/#standalone-fid","title":"Standalone FID","text":"<p>This command runs FID in a docker container as a standalone node (local zookeeper).</p>"},{"location":"docker/#run","title":"run","text":"<pre><code>docker run --rm --hostname=myfid --name=myfid -e LICENSE=\"&lt;FID Cluster License&gt;\" \\\n-p 7070:7070 -p 2389:2389 radiantone/fid:7.4.0\n</code></pre> <p>For Mac M1 use this image <code>radiantone/fid:7.4.0-arm64</code></p>"},{"location":"docker/#logs","title":"logs","text":"<pre><code>docker logs -f myfid\n</code></pre>"},{"location":"docker/#status","title":"status","text":"<pre><code>docker ps\n</code></pre> <p>When the container shows healthy status, access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre>"},{"location":"docker/#cleanup","title":"Cleanup","text":"<pre><code>docker stop container myfid\ndocker rm container myfid\n</code></pre>"},{"location":"docker/#fid-cluster-external-zookeeper","title":"FID Cluster + External Zookeeper","text":""},{"location":"docker/#create-a-network","title":"create a network","text":"<pre><code>docker network create --driver bridge zk-net\n</code></pre>"},{"location":"docker/#external-zookeeper","title":"External Zookeeper","text":""},{"location":"docker/#start-zookeeper-containers","title":"start zookeeper containers","text":"<pre><code>docker run --hostname=zk-0 --name=zk-0 --network=zk-net --rm \\\n-e ZOOKEEPER_FLEET_SIZE=3 radiantone/zookeeper:3.5.8\n</code></pre> <pre><code>docker run --hostname=zk-1 --name=zk-1 --network=zk-net --rm \\\n-e ZOOKEEPER_FLEET_SIZE=3 radiantone/zookeeper:3.5.8\n</code></pre> <pre><code>docker run --hostname=zk-2 --name=zk-2 --network=zk-net --rm \\\n-e ZOOKEEPER_FLEET_SIZE=3 radiantone/zookeeper:3.5.8\n</code></pre> <p>For Mac M1 use this image <code>radiantone/zookeeper:3.5.8-arm64</code></p>"},{"location":"docker/#status_1","title":"status","text":"<pre><code>docker ps\n</code></pre>"},{"location":"docker/#logs_1","title":"logs","text":"<pre><code>docker logs -f zk-0\n</code></pre> <pre><code>docker logs -f zk-1\n</code></pre> <pre><code>docker logs -f zk-2\n</code></pre>"},{"location":"docker/#fid-cluster","title":"FID cluster","text":""},{"location":"docker/#node-1","title":"node 1","text":"<pre><code>docker run -d --hostname=fid-0 --name fid-0 --network=zk-net --rm \\\n-e CLUSTER=new -e ZK=external -e ZK_CONN_STR=\"zk-0:2181,zk-1:2181,zk-2:2181\" \\\n-e ZK_CLUSTER=docker-cluster -e ZK_PASSWORD=secret1234 \\\n-e LICENSE=\"&lt;FID Cluster License&gt;\" \\\n-p 17070:7070 -p 12389:2389 radiantone/fid:7.4.0\n</code></pre>"},{"location":"docker/#node-2","title":"node 2","text":"<p>Start the second node only after the first node is completely up and running</p> <pre><code>docker run -d --hostname=fid-1 --name fid-1 --network=zk-net --rm \\\n-e CLUSTER=new -e ZK=external -e ZK_CONN_STR=\"zk-0:2181,zk-1:2181,zk-2:2181\" \\\n-e ZK_CLUSTER=docker-cluster -e ZK_PASSWORD=secret1234 \\\n-e LICENSE=\"&lt;FID Cluster License&gt;\" \\\n-p 27070:7070 -p 22389:2389 radiantone/fid:7.4.0\n</code></pre>"},{"location":"docker/#node-3","title":"node 3","text":"<p>Check the memory and CPU usage before running the third node</p> <pre><code>docker run -d --hostname=fid-2 --name fid-2 --network=zk-net --rm \\\n-e CLUSTER=new -e ZK=external -e ZK_CONN_STR=\"zk-0:2181,zk-1:2181,zk-2:2181\" \\\n-e ZK_CLUSTER=docker-cluster -e ZK_PASSWORD=secret1234 \\\n-e LICENSE=\"&lt;FID Cluster License&gt;\" \\\n-p 37070:7070 -p 32389:2389 radiantone/fid:7.4.0\n</code></pre> <p>For Mac M1 use this image <code>radiantone/fid:7.4.0-arm64</code></p> <p>When the container shows healthy status, access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre>"},{"location":"docker/#cleanup_1","title":"Cleanup","text":"<pre><code>docker stop container fid-0 fid-1 fid-2\ndocker stop container zk-0 zk-1 zk-2\n</code></pre> <pre><code>docker container prune\n</code></pre>"},{"location":"helm/","title":"Helm","text":""},{"location":"helm/#before-you-start","title":"Before you start","text":"<ul> <li>Helm is installed</li> <li>A running kubernetes cluster (minikube, EKS, AKS, GKE, k3s, k8s)</li> <li>kubectl is configured to access the right cluster. Verify by running the following commands:</li> </ul> <pre><code>kubectl cluster-info\n</code></pre> <pre><code>kubectl get nodes\n</code></pre>"},{"location":"helm/#helm-deployment","title":"Helm Deployment","text":"<p>The radiantone helm repository is hosted at https://radiantlogic-devops.github.io/helm</p>"},{"location":"helm/#add-radiantone-repository","title":"Add radiantone repository","text":"<ul> <li>Run the command below to add <code>radiantone</code> repo</li> </ul> <pre><code>helm repo add radiantone https://radiantlogic-devops.github.io/helm\n</code></pre> <p>Verify</p> <ul> <li>To verify that <code>radiantone</code> repo is added, run the command below</li> </ul> <pre><code>helm repo list\n</code></pre> <p>In the output you should see <code>radiantone</code> added along with other repositories if you have any</p> <p>(Recommended) To update the repo</p> <pre><code>helm repo update\n</code></pre>"},{"location":"helm/#helm-templates","title":"helm templates","text":"<p>To view the kubernetes manifest file generated by helm, run the commands below. This will not deploy the application, but only generates the manifest.</p> <pre><code>helm template zookeeper radiantone/zookeeper\n</code></pre> <pre><code>helm template fid radiantone/fid\n</code></pre>"},{"location":"helm/#installing-fidzookeeper","title":"Installing FID/Zookeeper","text":""},{"location":"helm/#creating-namespace","title":"Creating Namespace","text":"<ul> <li>Run the command below to create a new namespace to deploy FID/Zookeeper</li> </ul> <pre><code>kubectl create namespace helm-lab\n</code></pre> <p>Verify:</p> <ul> <li>To verify if the namespace has been created, run the command below</li> </ul> <pre><code>kubectl get namespace\n</code></pre> <ul> <li>You should see \"helm-lab\" in the output</li> </ul>"},{"location":"helm/#installing-zookeeper","title":"Installing Zookeeper","text":"<ul> <li>Run the commnd below to install a 3 node zookeepr ensemble</li> </ul> <pre><code>helm install --namespace=helm-lab zookeeper radiantone/zookeeper\n</code></pre> <ul> <li>The above command deploys zookeeper (default with replicaCount=3)</li> <li>You will see following response printed to the console</li> </ul> <pre><code>helm install --namespace=helm-lab zookeeper radiantone/zookeeper\nNAME: zookeeper\nLAST DEPLOYED: &lt;date&gt;\nNAMESPACE: helm-lab\nSTATUS: deployed\nREVISION: 1\nNOTES:\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace helm-lab -l \"app.kubernetes.io/name=zookeeper,app.kubernetes.io/instance=zookeeper\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:8080/commands to use your application\"\n  kubectl --namespace helm-lab port-forward $POD_NAME 8080:8080\n</code></pre> <p>Verify</p> <ul> <li>To verify if zookeeper has been deoployed successfully, run the command below</li> </ul> <pre><code>kubectl get pods -n helm-lab\n</code></pre> <ul> <li>You will see three zookeeper pods \"zookeeper-0/1/2\"  </li> </ul> <p>List Zookeeper releases</p> <ul> <li>To list the zookeeper releases, run the command below</li> </ul> <pre><code>helm list --namespace=helm-lab\n</code></pre>"},{"location":"helm/#installing-fid","title":"Installing FID","text":"<p>Install FID</p>"},{"location":"helm/#using-valuesyaml-file","title":"Using values.yaml file","text":"<p>Create a file called myfid.yaml with the following content</p> <pre><code>image:\n  tag: \"7.4.9\"\nfid:\n  license: \"&lt;FID cluster license&gt;\"\n  rootPassword: \"test1234\"\n</code></pre> <p>Replace the \"FID cluster license\" with your license.</p> <p>Run the following command (use <code>--dry-run</code> option to validate the kubernetes manifest)</p> <pre><code>helm install --namespace=helm-lab fid radiantone/fid -f myfid.yaml\n</code></pre>"},{"location":"helm/#using-set-command-not-recommended","title":"Using <code>--set</code> command (not recommended)","text":"<pre><code>helm install --namespace=helm-lab fid radiantone/fid \\\n--set fid.license=\"&lt;FID cluster license&gt;\" \\\n--set fid.rootPassword=\"test1234\"\n</code></pre> <p>IMPORTANT NOTE : Curly brackets in the license key must be escaped --set fid.license=\"\\{rlib\\}xxx\"</p> <p>Run the following command</p> <pre><code>NAME: fid\nLAST DEPLOYED: &lt;date&gt;\nNAMESPACE: helm-lab\nSTATUS: deployed\nREVISION: 1\nNOTES:\n1. Get the Control Panel URL by running these commands:\n  kubectl --namespace helm-lab port-forward fid-ext 7070:7070 8089:8089\n  echo \"Visit http://127.0.0.1:7070 to use your application\"\n\n2. Login to the Control Panel using these credentials\n  kubectl get secret/rootcreds-fid --namespace helm-lab  -o jsonpath=\"{.data.fid-root-username}\" | base64 -d\n  kubectl get secret/rootcreds-fid --namespace helm-lab  -o jsonpath=\"{.data.fid-root-password}\" | base64 -d\n</code></pre> <p>Verify</p> <ul> <li>To verify if fid has been deployed successfully, run the command below</li> </ul> <pre><code>kubectl get pod -n helm-lab\n</code></pre> <ul> <li> <p>You will see  fid pod <code>fid-0</code> </p> </li> <li> <p>To view logs</p> </li> </ul> <pre><code>kubectl logs -f fid-0 -n helm-lab\n</code></pre>"},{"location":"helm/#accessing-control-panel","title":"Accessing Control Panel","text":"<ul> <li>To access the control panel run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid-ext -n helm-lab 7070\n</code></pre> <p>Access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\ntest1234\n</code></pre>"},{"location":"helm/#accessing-ldapadap-service","title":"Accessing LDAP/ADAP Service","text":"<ul> <li>To access the LDAP/ADAP service run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid-app -n helm-lab 2389 8089\n</code></pre> <p>Access the LDAP service at ldap://localhost:2389 from your LDAP browser</p> <p>Access the ADAP service at http://localhost:8089</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\ntest1234\n</code></pre>"},{"location":"helm/#scaling-up-fid","title":"Scaling Up FID","text":"<p>Add a new node to the cluster</p>"},{"location":"helm/#using-valueyaml-file","title":"Using value.yaml file","text":"<p>Update myfid.yaml file and set replicaCount as 2. Make sure other values are unchanged.</p> <pre><code>replicaCount: 2\nfid:\n  license: \"&lt;FID cluster license&gt;\"\n  rootPassword: \"test1234\"\n</code></pre> <p>Run the command below (use <code>--dry-run</code> option to verify the changes)</p> <pre><code>helm upgrade --install --namespace=helm-lab fid radiantone/fid -f myfid.yaml\n</code></pre>"},{"location":"helm/#using-set-command-not-recommended_1","title":"Using <code>--set</code> command (not recommended)","text":"<p>**Note: When using upgrade with <code>--set</code> option, all previously overridden settings must be passed, else it will overwrite with default values.</p> <pre><code>helm upgrade --namespace=helm-lab fid radiantone/fid --set replicaCount=2 \\\n--set fid.license=\"&lt;FID cluster license&gt;\" \\\n--set fid.rootPassword=\"test1234\"\n</code></pre> <p>Verify</p> <ul> <li>To verify if fid has been deployed successfully, run the command below</li> </ul> <pre><code>kubectl get pods -n helm-lab\n</code></pre> <ul> <li>You will see 2 fid pods <code>fid-0 fid-1</code></li> </ul> <p>List FID releases</p> <ul> <li>To list the fid releases, run the command below</li> </ul> <pre><code>helm list --namespace=helm-lab\n</code></pre>"},{"location":"helm/#advanced","title":"Advanced","text":"<p>Update FID version (optional)</p> <ul> <li>The FID cluster must be running at least 2 nodes to update the version</li> <li>To upgrade an existing or deployed radiantone release, run the below command</li> </ul>"},{"location":"helm/#using-valueyaml-file_1","title":"Using value.yaml file","text":"<p>Update myfid.yaml file and set image.tag as 7.4.10. Make sure other values are unchanged.</p> <pre><code>image:\n  tag: \"7.4.10\"\nreplicaCount: 2\nfid:\n  license: \"&lt;FID cluster license&gt;\"\n  rootPassword: \"test1234\"\n</code></pre> <p>Run the command below (use <code>--dry-run</code> option to verify the changes)</p> <pre><code>helm upgrade --install --namespace=helm-lab fid radiantone/fid -f myfid.yaml\n</code></pre>"},{"location":"helm/#using-set-command-not-recommended_2","title":"Using <code>--set</code> command (not recommended)","text":"<p>**Note: When using upgrade with <code>--set</code> option, all previously overridden settings must be passed, else it will overwrite with default values.</p> <pre><code>helm upgrade --namespace=helm-lab fid radiantone/fid --set image.tag=7.4.1 \\\n--set image.tag=7.4.10 \\\n--set replicaCount=2 \\\n--set fid.license=\"&lt;FID cluster license&gt;\" \\\n--set fid.rootPassword=\"test1234\"\n</code></pre> <p>NOTE: Check for the latest image releases if the new tag is available here</p>"},{"location":"helm/#cleanup","title":"Cleanup","text":"<ul> <li>To remove the Zookeeper/FID helm deployments run the commands below</li> </ul> <p>Removing FID deployment</p> <pre><code>helm uninstall --namespace=helm-lab fid\n</code></pre> <p>Verify</p> <ul> <li>To verify if the fid depoloyment has been deleted/removed run the command below</li> </ul> <pre><code>kubectl get all -n helm-lab\n</code></pre> <p>You should not see any fid pods, move to the next step</p> <p>Removing Zookeeper Deployment</p> <ul> <li>To remove Zookeeper deployment run the command below</li> </ul> <pre><code>helm uninstall --namespace=helm-lab zk\n</code></pre> <p>Verify</p> <ul> <li>To verify if the fid depoloyment has been deleted/removed run the command below</li> </ul> <pre><code>kubectl get all -n helm-lab\n</code></pre> <p>You should not see any zookeeper pods.</p> <p>Delete Namespace</p> <ul> <li>To delete the namespace that was created, run the command below</li> </ul> <pre><code>kubectl delete namespace helm-lab\n</code></pre> <p>Verify</p> <ul> <li>To verify if namespace has been deleted, run the command below</li> </ul> <pre><code>kubectl get namespace\n</code></pre> <p>You should not find the \"helm-lab\" in the list of namespaces.</p>"},{"location":"k8s-cheatsheet/","title":"Kubernetes","text":"<p>A cheat sheet for Kubernetes commands.</p>"},{"location":"k8s-cheatsheet/#kubectl-alias","title":"Kubectl Alias","text":"<p>Linux</p> <pre><code>alias k=kubectl\n</code></pre> <p>Windows</p> <pre><code>Set-Alias -Name k -Value kubectl\n</code></pre>"},{"location":"k8s-cheatsheet/#cluster-info","title":"Cluster Info","text":"<ul> <li>Get clusters</li> </ul> <pre><code>kubectl config get-clusters\nNAME\ndocker-for-desktop-cluster\nfoo\n</code></pre> <ul> <li>Get cluster info.</li> </ul> <pre><code>kubectl cluster-info\nKubernetes master is running at https://172.17.0.58:8443\n</code></pre>"},{"location":"k8s-cheatsheet/#contexts","title":"Contexts","text":"<p>A context is a cluster, namespace and user.</p> <ul> <li>Get a list of contexts.</li> </ul> <pre><code>kubectl config get-contexts\n</code></pre> <pre><code>CURRENT   NAME                 CLUSTER                      AUTHINFO             NAMESPACE\n          docker-desktop       docker-desktop               docker-desktop\n*         foo                  foo                          foo                  bar\n</code></pre> <ul> <li>Get the current context.</li> </ul> <pre><code>kubectl config current-context\nfoo\n</code></pre> <ul> <li>Switch current context.</li> </ul> <pre><code>kubectl config use-context docker-desktop\n</code></pre> <ul> <li>Set default namesapce</li> </ul> <pre><code>kubectl config set-context $(kubectl config current-context) --namespace=my-namespace\n</code></pre> <p>To switch between contexts, you can also install and use kubectx.</p>"},{"location":"k8s-cheatsheet/#get-commands","title":"Get Commands","text":"<pre><code>kubectl get all\nkubectl get namespaces\nkubectl get configmaps\nkubectl get nodes\nkubectl get pods\nkubectl get rs\nkubectl get svc kuard\nkubectl get endpoints kuard\n</code></pre> <p>Additional switches that can be added to the above commands:</p> <ul> <li><code>-o wide</code> - Show more information.</li> <li><code>--watch</code> or <code>-w</code> - watch for changes.</li> </ul>"},{"location":"k8s-cheatsheet/#namespaces","title":"Namespaces","text":"<ul> <li><code>--namespace</code> - Get a resource for a specific namespace.</li> </ul> <p>You can set the default namespace for the current context like so:</p> <pre><code>kubectl config set-context $(kubectl config current-context) --namespace=my-namespace\n</code></pre> <p>To switch namespaces, you can also install and use kubens.</p>"},{"location":"k8s-cheatsheet/#labels","title":"Labels","text":"<ul> <li>Get pods showing labels.</li> </ul> <pre><code>kubectl get pods --show-labels\n</code></pre> <ul> <li>Get pods by label.</li> </ul> <pre><code>kubectl get pods -l environment=production,tier!=frontend\nkubectl get pods -l 'environment in (production,test),tier notin (frontend,backend)'\n</code></pre>"},{"location":"k8s-cheatsheet/#describe-command","title":"Describe Command","text":"<pre><code>kubectl describe nodes [id]\nkubectl describe pods [id]\nkubectl describe rs [id]\nkubectl describe svc kuard [id]\nkubectl describe endpoints kuard [id]\n</code></pre>"},{"location":"k8s-cheatsheet/#delete-command","title":"Delete Command","text":"<pre><code>kubectl delete nodes [id]\nkubectl delete pods [id]\nkubectl delete rs [id]\nkubectl delete svc kuard [id]\nkubectl delete endpoints kuard [id]\n</code></pre> <p>Force a deletion of a pod without waiting for it to gracefully shut down</p> <pre><code>kubectl delete pod-name --grace-period=0 --force\n</code></pre>"},{"location":"k8s-cheatsheet/#create-vs-apply","title":"Create vs Apply","text":"<p><code>kubectl create</code> can be used to create new resources while <code>kubectl apply</code> inserts or updates resources while maintaining any manual changes made like scaling pods.</p> <ul> <li><code>--record</code> - Add the current command as an annotation to the resource.</li> <li><code>--recursive</code> - Recursively look for yaml in the specified directory.</li> </ul>"},{"location":"k8s-cheatsheet/#create-pod","title":"Create Pod","text":"<pre><code>kubectl run kuard --generator=run-pod/v1 --image=gcr.io/kuar-demo/kuard-amd64:1 --output yaml --export --dry-run &gt; kuard-pod.yml\nkubectl apply -f kuard-pod.yml\n</code></pre>"},{"location":"k8s-cheatsheet/#create-deployment","title":"Create Deployment","text":"<pre><code>kubectl run kuard --image=gcr.io/kuar-demo/kuard-amd64:1 --output yaml --export --dry-run &gt; kuard-deployment.yml\nkubectl apply -f kuard-deployment.yml\n</code></pre>"},{"location":"k8s-cheatsheet/#create-service","title":"Create Service","text":"<pre><code>kubectl expose deployment kuard --port 8080 --target-port=8080 --output yaml --export --dry-run &gt; kuard-service.yml\nkubectl apply -f kuard-service.yml\n</code></pre>"},{"location":"k8s-cheatsheet/#export-yaml-for-new-pod","title":"Export YAML for New Pod","text":"<pre><code>kubectl run my-cool-app \u2014-image=me/my-cool-app:v1 --output yaml --export --dry-run &gt; my-cool-app.yaml\n</code></pre>"},{"location":"k8s-cheatsheet/#export-yaml-for-existing-object","title":"Export YAML for Existing Object","text":"<pre><code>kubectl get deployment my-cool-app --output yaml --export &gt; my-cool-app.yaml\n</code></pre>"},{"location":"k8s-cheatsheet/#logs","title":"Logs","text":"<ul> <li>Get logs.</li> </ul> <pre><code>kubectl logs -l app=kuard\n</code></pre> <ul> <li>Get logs for previously terminated container.</li> </ul> <pre><code>kubectl logs POD_NAME --previous\n</code></pre> <ul> <li>Watch logs in real time.</li> </ul> <pre><code>kubectl attach POD_NAME\n</code></pre> <ul> <li>Copy files out of pod (Requires <code>tar</code> binary in container).</li> </ul> <pre><code>kubectl cp POD_NAME:/var/log .\n</code></pre> <p>You can also install and use kail.</p>"},{"location":"k8s-cheatsheet/#port-forward","title":"Port Forward","text":"<pre><code>kubectl port-forward deployment/kuard 8080:8080\n</code></pre>"},{"location":"k8s-cheatsheet/#scaling","title":"Scaling","text":"<ul> <li>Update replicas.</li> </ul> <pre><code>kubectl scale deployment nginx-deployment --replicas=10\n</code></pre>"},{"location":"k8s-cheatsheet/#autoscaling","title":"Autoscaling","text":"<ul> <li>Set autoscaling config.</li> </ul> <pre><code>kubectl autoscale deployment nginx-deployment --min=10 --max=15 --cpu-percent=80\n</code></pre>"},{"location":"k8s-cheatsheet/#rollout","title":"Rollout","text":"<ul> <li>Get rollout status.</li> </ul> <pre><code>kubectl rollout status deployment/nginx-deployment\nWaiting for rollout to finish: 2 out of 3 new replicas have been updated...\ndeployment \"nginx-deployment\" successfully rolled out\n</code></pre> <ul> <li>Get rollout history.</li> </ul> <pre><code>kubectl rollout history deployment/nginx-deployment\nkubectl rollout history deployment/nginx-deployment --revision=2\n</code></pre> <ul> <li>Undo a rollout.</li> </ul> <pre><code>kubectl rollout undo deployment/nginx-deployment\nkubectl rollout undo deployment/nginx-deployment --to-revision=2\n</code></pre> <ul> <li>Pause/resume a rollout</li> </ul> <pre><code>kubectl rollout pause deployment/nginx-deployment\nkubectl rollout resume deploy/nginx-deployment\n</code></pre>"},{"location":"k8s-cheatsheet/#pod-example","title":"Pod Example","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: cuda-test\nspec:\n  containers:\n    - name: cuda-test\n      image: \"k8s.gcr.io/cuda-vector-add:v0.1\"\n      resources:\n        limits:\n          nvidia.com/gpu: 1\n  nodeSelector:\n    accelerator: nvidia-tesla-p100\n</code></pre>"},{"location":"k8s-cheatsheet/#deployment-example","title":"Deployment Example","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: my-namespace\n  labels:\n    - environment: production,\n    - teir: frontend\n  annotations:\n    - key1: value1,\n    - key2: value2\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.7.9\n        ports:\n        - containerPort: 80\n</code></pre>"},{"location":"k8s-cheatsheet/#dashboard","title":"Dashboard","text":"<ul> <li>Enable proxy</li> </ul> <pre><code>kubectl proxy\n</code></pre>"},{"location":"kubernetes/","title":"Kubernetes","text":""},{"location":"kubernetes/#before-you-start","title":"Before you start","text":"<ul> <li>FID or Zookeeper running locally on your machine are stopped.</li> <li>Make sure you have a running kubernetes cluster (minikube, EKS, AKS, GKE, k3s, k8s)</li> <li>If using minikube, see the minikube section</li> </ul>"},{"location":"kubernetes/#kubectl","title":"kubectl","text":"<ul> <li>Make sure kubectl is configured to access the right cluster. You can verify that by running the following commands</li> </ul> <pre><code>kubectl cluster-info\n</code></pre> <pre><code>kubectl get nodes\n</code></pre>"},{"location":"kubernetes/#manifest-files","title":"Manifest files","text":"<ul> <li>Clone the kubernetes manifest samples repo</li> </ul> <pre><code>git clone https://github.com/radiantlogic-devops/kubernetes.git\n</code></pre> <ul> <li>Alternatively you can download it from Github page, from internet browser go to</li> </ul> <pre><code>https://github.com/radiantlogic-devops/kubernetes.git\n</code></pre>"},{"location":"kubernetes/#standalone-fid","title":"Standalone FID","text":""},{"location":"kubernetes/#creating-namespace","title":"Creating Namespace","text":"<pre><code>kubectl create ns lab-00\n</code></pre> <p>Verify:</p> <ul> <li>To verify if the namespace is created, run the below command</li> </ul> <pre><code>kubectl get namespace\n</code></pre> <p>In the list of namespaces from the output you should see <code>lab-00</code></p>"},{"location":"kubernetes/#edit-manifest-file-fidyaml","title":"Edit Manifest File (fid.yaml)","text":"<ul> <li>From the cloned/downloaded folder navigate to kubernetes/generic/00-cluster-local-zk folder and open the manifest file <code>fid.yaml</code> in your code editor.</li> <li>Update the manifest file <code>kubernetes/generic/00-cluster-local-zk/fid.yaml</code> and paste the license key. Look for <code>PASTE_LICENSE_HERE</code>, replace it with a valid RadiantOne cluster license key and save the file.  </li> <li>For Mac M1, update the image <code>radiantone/fid:7.4.0-arm64</code></li> </ul>"},{"location":"kubernetes/#deploying-standalone-fid","title":"Deploying Standalone FID","text":"<ul> <li>To deploy the standalone FID, run the command below (make sure to follow \"Edit Manifest File\" before running the command below)</li> </ul> <pre><code>kubectl apply -f kubernetes/generic/00-cluster-local-zk/fid.yaml -n lab-00\n</code></pre>"},{"location":"kubernetes/#check-status","title":"Check status","text":"<ul> <li>To get the status of pods (Pending/Running/Succeeded/Failed/Unknown)</li> </ul> <pre><code>kubectl get po -n lab-00\n</code></pre> <p>When the pod shows 1/1 running status, proceed to the next step. It could take anywhere from 2 to 5 minutes to start.</p> <ul> <li>To view logs</li> </ul> <pre><code>kubectl logs -f fid-0 -n lab-00\n</code></pre>"},{"location":"kubernetes/#accessing-the-control-panel","title":"Accessing the Control Panel","text":"<p>** Open a new command prompt for port forwarding.</p> <ul> <li>To access the control panel of FID, run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid-cp -n lab-00 7070 8089\n</code></pre> <p>Access the control panel at http://localhost:7070</p> <p>Access the ADAP service at http://localhost:8089</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre>"},{"location":"kubernetes/#accessing-ldap-service","title":"Accessing LDAP Service","text":"<p>** Open a new command prompt for port forwarding.</p> <ul> <li>To access the LDAP service run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid -n lab-00 2389\n</code></pre> <p>Access the LDAP service at ldap://localhost:2389 from your LDAP browser</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\ntest1234\n</code></pre>"},{"location":"kubernetes/#cleanup","title":"Cleanup","text":"<ul> <li>Run the command below to delete the above FID deployment</li> </ul> <pre><code>kubectl delete -f kubernetes/generic/00-cluster-local-zk/fid.yaml -n lab-00\n</code></pre> <p>(If needed run this command to forcefully terminate the pod)</p> <pre><code>kubectl delete po/fid-0 -n lab-00 --force\n</code></pre> <p>Verify:</p> <p>To verify that the FID deployment has been sucessfully deleted, run the command below</p> <pre><code>kubectl get all -n lab-00\n</code></pre> <p>You will no more see any zookeeper or fid pods. Once you verify that there are no zookeeper and FID pods, proceed to the next step</p> <ul> <li>Run the following command to delete the namespace created</li> </ul> <pre><code>kubectl delete ns lab-00\n</code></pre> <p>Verify:</p> <p>To verify that the namespace has been deleted, run the command below</p> <pre><code>kubectl get namespace\n</code></pre> <p>You should no more see the \"lab-00\" namespace in the list of namepsaces.</p>"},{"location":"kubernetes/#fid-with-external-zookeeper","title":"FID with External Zookeeper","text":""},{"location":"kubernetes/#creating-namespace_1","title":"Creating Namespace","text":"<pre><code>kubectl create ns lab-01\n</code></pre>"},{"location":"kubernetes/#edit-manifest-file","title":"Edit Manifest File","text":"<ul> <li>From the cloned/downloaded folder navigate to kubernetes/generic/02-cluster-ext-zk folder and open the manifest file \"fid.yaml\" in your code editor</li> <li>Update the manifest file <code>kubernetes/generic/02-cluster-ext-zk/fid.yaml</code> and update the following</li> <li>License Key. Look for <code>PASTE_LICENSE_HERE</code>, replace it with a valid RadiantOne cluster license key and save the file.  </li> </ul>"},{"location":"kubernetes/#deploying-zookeeper","title":"Deploying Zookeeper","text":"<ul> <li>Run the command below to deploy zookeeper</li> </ul> <pre><code>kubectl apply -f kubernetes/generic/01-external-zk/zk.yaml -n lab-01\n</code></pre>"},{"location":"kubernetes/#check-status_1","title":"Check status","text":"<p>To get the status of pods (Pending/Running/Succeeded/Failed/Unknown)</p> <pre><code>kubectl get po -n lab-01\n</code></pre> <p>(use -w flag to watch the progress)</p> <pre><code>kubectl get po -n lab-01 -w\n</code></pre> <p>You will see three pods (named zookeeper-0/1/2) </p> <p>When all the three pods show 1/1 running status, proceed to the next step</p> <p>(Optional) Check if zookeeper is up and running, and which node is the leader</p> <pre><code>kubectl exec -it zookeeper-0 -n lab-01 -- bash -c \"export JAVA_HOME=/opt/radiantone/rli-zookeeper-external/jdk/jre/;/opt/radiantone/rli-zookeeper-external/zookeeper/bin/zkServer.sh status\"\n</code></pre> <pre><code>kubectl exec -it zookeeper-1 -n lab-01 -- bash -c \"export JAVA_HOME=/opt/radiantone/rli-zookeeper-external/jdk/jre/;/opt/radiantone/rli-zookeeper-external/zookeeper/bin/zkServer.sh status\"\n</code></pre> <pre><code>kubectl exec -it zookeeper-2 -n lab-01 -- bash -c \"export JAVA_HOME=/opt/radiantone/rli-zookeeper-external/jdk/jre/;/opt/radiantone/rli-zookeeper-external/zookeeper/bin/zkServer.sh status\"\n</code></pre>"},{"location":"kubernetes/#deploying-fid","title":"Deploying FID","text":"<ul> <li>Run the command below to deploy FID (1 node)</li> </ul> <pre><code>kubectl apply -f kubernetes/generic/02-cluster-ext-zk/fid.yaml -n lab-01\n</code></pre>"},{"location":"kubernetes/#check-status_2","title":"Check status","text":"<p>To get the status of pods (Pending/Running/Succeeded/Failed/Unknown)</p> <pre><code>kubectl get po -n lab-01\n</code></pre> <p>You will see one pod  (named fid-0)</p> <p>To check the logs and see the progress or see the progress on the kubernetes dashboard</p> <pre><code>kubectl logs -f fid-0 -n lab-01\n</code></pre> <p>When the pod fid-0 shows 1/1 running status, proceed to next step</p> <p>It might take anywhere from 3 to 5 minutes for the pod to be ready</p> <p>Cluster status</p> <pre><code>kubectl exec -it fid-0 -n lab-01 -- cluster.sh list\n</code></pre>"},{"location":"kubernetes/#accessing-the-control-panel_1","title":"Accessing the Control Panel","text":"<ul> <li>To access the control panel of FID, run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid-cp -n lab-01 7070 8089\n</code></pre> <p>Access the control panel at http://localhost:7070</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\nsecret1234\n</code></pre>"},{"location":"kubernetes/#accessing-ldap-service_1","title":"Accessing LDAP Service","text":"<ul> <li>To access the LDAP service run the command below</li> </ul> <pre><code>kubectl port-forward svc/fid -n lab-00 2389\n</code></pre> <p>Access the LDAP service at ldap://localhost:2389 from your LDAP browser</p> <p>The default username/password is</p> <pre><code>cn=Directory Manager\ntest1234\n</code></pre>"},{"location":"kubernetes/#scaling-up-fid","title":"Scaling Up FID","text":"<ul> <li>Add a new node to the cluster</li> </ul> <pre><code>kubectl scale sts/fid --replicas=2 -n lab-01\n</code></pre> <p>Verify</p> <p>To verify if fid has been scaled up successfully, run the command below</p> <pre><code>kubectl get pods -n lab-01\n</code></pre> <p>You will see 2 fid pods <code>fid-0 fid-1</code></p>"},{"location":"kubernetes/#scaling-down-fid","title":"Scaling Down FID","text":"<ul> <li>Remove a node from the cluster</li> </ul> <pre><code>kubectl scale sts/fid --replicas=1 -n lab-01\n</code></pre> <p>Verify</p> <p>To verify if fid has been scaled down successfully, run the command below</p> <pre><code>kubectl get pods -n lab-01\n</code></pre> <p>You will see 1 fid pod <code>fid-0</code></p>"},{"location":"kubernetes/#advanced-optional","title":"Advanced (Optional)","text":""},{"location":"kubernetes/#update-fid-version","title":"Update FID version","text":"<ul> <li>The FID cluster must be running at least 2 nodes to update the version</li> <li>Scale the statefulset to 2 replicas</li> <li>This will perform a rolling update of each node</li> <li>To upgrade an existing or deployed radiantone release, run the below command</li> </ul> <pre><code>kubectl scale sts/fid --replicas=2 -n lab-01\n</code></pre> <pre><code>kubectl set image sts/fid fid=radiantone/fid:7.4.1 -n lab-01\n</code></pre>"},{"location":"kubernetes/#export-configuration","title":"Export Configuration","text":"<ul> <li>Export the configration of FID in the container</li> </ul> <pre><code>kubectl exec -it fid-0 -n lab-01 -- ./migrate.sh export lab-01-export.zip\n</code></pre> <ul> <li>Copy file from container to local machine</li> </ul> <pre><code>kubectl cp fid-0:/opt/radiantone/vds/work/lab-01-export.zip lab-01-export.zip -n lab-01\n</code></pre>"},{"location":"kubernetes/#import-configuration","title":"Import Configuration","text":"<ul> <li>Copy file from local machine to container</li> </ul> <pre><code>kubectl cp lab-01-export.zip fid-0:/opt/radiantone -n lab-01\n</code></pre> <ul> <li>Import the configration to FID in the container</li> </ul> <pre><code>kubectl exec -it fid-0 -n lab-01 -- ./migrate.sh import /opt/radiantone/lab-01-export.zip\n</code></pre>"},{"location":"kubernetes/#cleanup_1","title":"Cleanup","text":"<ul> <li>Run the command below to delete the FID deployment</li> </ul> <pre><code>kubectl delete -f kubernetes/generic/02-cluster-ext-zk/fid.yaml -n lab-01\n</code></pre> <p>Verify:</p> <p>To verify that the FID deployment has been deleted, run the command below</p> <pre><code>kubectl get all -n lab-01\n</code></pre> <ul> <li>Run the command below to delete the zookeeper deployment</li> </ul> <pre><code>kubectl delete -f kubernetes/generic/01-external-zk/zk.yaml -n lab-01\n</code></pre> <p>Verify:</p> <p>To verify that the Zookeeper deployment has been sucessfully deleted, run the command below</p> <pre><code>kubectl get all -n lab-01\n</code></pre> <ul> <li>Run the following command to delete the namespace created</li> </ul> <pre><code>kubectl delete ns lab-01\n</code></pre> <p>Verify:</p> <p>To verify that the namespace has been deleted, run the command below</p> <pre><code>kubectl get ns\n</code></pre> <p>You should no more see the \"lab-01\" namespace in the list fo namespaces.</p>"},{"location":"minikube/","title":"minikube","text":""},{"location":"minikube/#minikube-start","title":"minikube start","text":"<p>Minikube is local Kubernetes, focusing on making it easy to learn and develop for Kubernetes.</p> <p>All you need is Docker (or similarly compatible) container or a Virtual Machine environment, and Kubernetes is a single command away: <code>minikube start</code></p>"},{"location":"minikube/#what-youll-need-for-this-lab","title":"What you\u2019ll need for this lab","text":"<ul> <li>4 CPUs or more</li> <li>16GB of free memory</li> <li>50GB of free disk space</li> <li>Internet connection</li> </ul> <p>** If using Docker Desktop, increase the memory allocation to 16GB ** If you already started minikube, stop it, delete it and configure with the following settings</p>"},{"location":"minikube/#settings","title":"Settings","text":"<ul> <li>Increase the default cpu/memory allocation (requires restart)</li> </ul> <pre><code>minikube config set memory 8192\nminikube config set cpus 4\n</code></pre> <ul> <li>Validate the settings</li> </ul> <pre><code>minikube config view\n</code></pre>"},{"location":"minikube/#start","title":"Start","text":"<ul> <li>Start minikube</li> </ul> <pre><code>minikube start\n</code></pre> <ul> <li>Run the command below to launch the kubernetes dashboard</li> </ul> <pre><code>minikube dashboard\n</code></pre>"},{"location":"minikube/#stop","title":"Stop","text":"<ul> <li>When the lab is finished, you can stop minikube</li> </ul> <pre><code>minikube stop\n</code></pre>"},{"location":"minikube/#delete-minikube","title":"Delete Minikube","text":"<ul> <li>To delete the minikube cluster</li> </ul> <pre><code>minikube delete\n</code></pre>"},{"location":"prereqs/","title":"Setup","text":""},{"location":"prereqs/#docker","title":"Docker","text":"<ul> <li>docker desktop or docker runtime</li> <li>Allocate 16GB memory for Docker</li> </ul> <p>Find the link to install docker here</p>"},{"location":"prereqs/#kubernetes","title":"Kubernetes","text":"<ul> <li>Kubernetes 1.18+</li> <li>minikube or eks or any other cluster</li> </ul> <p>Find the link to install minikube here</p>"},{"location":"prereqs/#kubectl","title":"kubectl","text":"<ul> <li>kubectl command line tool</li> </ul> <p>Find the link to install kubectl here</p>"},{"location":"prereqs/#helm","title":"helm","text":"<ul> <li>helm command line tool</li> </ul> <p>Find the link to install helm here</p>"},{"location":"prereqs/#license-key","title":"License key","text":"<ul> <li>A valid radiantone cluster license</li> </ul>"},{"location":"prereqs/#code-editor","title":"Code editor","text":"<ul> <li>A code editor of your choice (Vs-Code, Atom, Notepad++ etc.)</li> </ul> <p>Find the links below to the installation pages</p> <ul> <li>Visual Studio Code</li> <li>Atom</li> <li>Notepad ++</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#kubernetes","title":"Kubernetes","text":""},{"location":"troubleshooting/#if-pods-are-not-getting-deployed","title":"If pods are not getting deployed","text":"<pre><code>kubectl get events -n &lt;namespace&gt;\n</code></pre> <pre><code>kubectl describe po/fid-0 -n &lt;namespace&gt;\n</code></pre>"},{"location":"troubleshooting/#check-if-zookeeper-is-up-and-running","title":"Check if zookeeper is up and running","text":"<pre><code>kubectl exec -it zookeeper-0 -n &lt;namespace&gt; -- bash -c \"export JAVA_HOME=/opt/radiantone/rli-zookeeper-external/jdk/jre/;/opt/radiantone/rli-zookeeper-external/zookeeper/bin/zkServer.sh status\"\n</code></pre>"},{"location":"troubleshooting/#exec-into-an-fidzk-container","title":"Exec into an fid/zk container","text":"<pre><code>kubectl exec -it zookeeper-0 -n &lt;namespace&gt; -- /bin/bash\n</code></pre> <pre><code>kubectl exec -it fid-0 -n &lt;namespace&gt; -- /bin/bash\n</code></pre>"},{"location":"troubleshooting/#run-clustersh-command","title":"Run cluster.sh command","text":"<pre><code>kubectl exec -it fid-0 -n &lt;namespace&gt; -- cluster.sh list\n</code></pre>"},{"location":"troubleshooting/#list-java-processes","title":"List java processes","text":"<pre><code>kubectl exec -it fid-0 -n &lt;namespace&gt; -- /opt/radiantone/vds/jdk/bin/jps -lv\n</code></pre>"},{"location":"troubleshooting/#get-kubernetes-context","title":"Get kubernetes context","text":"<pre><code>kubectl config get-contexts\n</code></pre>"},{"location":"troubleshooting/#docker","title":"Docker","text":""},{"location":"troubleshooting/#logs","title":"Logs","text":"<pre><code>docker logs [options] &lt;container name&gt;\n</code></pre> <p>Options Available</p> <ul> <li>--details includes additional attributes to the log output, such as environment variables.</li> <li>--follow or -f shows new log output as the container runs.</li> <li>--since shows the log entries after the desired timestamp.</li> <li>--tail or -n shows some number (n) of lines from the end (tail) of the log.</li> <li>--timestamp or -t shows the log output for the desired point in time.</li> <li>--until shows all log entries until the desired timestamp.</li> </ul>"},{"location":"troubleshooting/#docker-process-status","title":"Docker Process Status","text":"<p>The docker process status command shows running containers </p> <pre><code>docker ps\n</code></pre> <p>To view all the running containers</p> <pre><code>docker ps -a\n</code></pre>"},{"location":"troubleshooting/#docker-remove","title":"Docker Remove","text":"<p>When you want to completely remove a container, you use the docker rm command</p> <pre><code>docker rm &lt;container_name&gt;\n</code></pre>"},{"location":"troubleshooting/#docker-inspect","title":"Docker Inspect","text":"<ul> <li>The Docker inspect command returns an assortment of detailed Docker container information. </li> <li>The information can include the container state, network port mappings, environment variable values and path to history log files</li> </ul> <pre><code>docker inspect [options] &lt;container 1 name or ID&gt; &lt;container 2 name or ID\u2026&gt;\n</code></pre>"},{"location":"troubleshooting/#docker-info","title":"Docker Info","text":"<ul> <li>Docker info command output may provide details that include the number of running, paused and stopped containers; number of available images; what storage driver is in use; storage use and availability metrics; specifics for plugins, OS and the kernel; CPU and memory details; the current Docker server version; and execution and logging drivers in use.</li> </ul> <pre><code>docker info [options]\n</code></pre>"},{"location":"troubleshooting/#docker-stats","title":"Docker Stats","text":"<ul> <li>The stats command automatically streams usage data for all running containers. Admins can declutter this information by using options and specifying desired container names</li> </ul> <pre><code>docker stats [options] &lt;container 1 name&gt; &lt;container 2 name\u2026&gt;\n</code></pre>"},{"location":"troubleshooting/#docker-events","title":"Docker Events","text":"<ul> <li>The Docker events command enables admins to see up to 1,000 server-based events in real time</li> </ul> <pre><code>docker events [options]\n</code></pre>"},{"location":"troubleshooting/#docker-exec","title":"Docker exec","text":"<ul> <li>The Docker exec command enables admins to execute new commands within the default directory of a running container. For exec to function, the command must be executable, and admins must run the target container</li> </ul> <pre><code>docker exec [options] &lt;container command&gt; &lt;command arguments&gt;\n</code></pre>"},{"location":"troubleshooting/#docker-compose","title":"Docker-Compose","text":"<p>To get the usage of docker-compose command run the command below</p> <pre><code>docker-compose -h\n</code></pre>"},{"location":"troubleshooting/#docker-compose-process-status","title":"Docker-Compose Process Status","text":"<p>To check the state of all the containers</p> <pre><code>docker-compose ps\n</code></pre> <p>NOTE : Run the docker-compose from the location of docker-compose.yaml file</p>"},{"location":"troubleshooting/#docker-compose-logs","title":"Docker-Compose Logs","text":"<p>To inpsect the logs and find any errors</p> <pre><code>docker-compose logs --follow\n</code></pre>"},{"location":"troubleshooting/#docker-compose-events","title":"Docker-Compose Events","text":"<p>Receive real time events from containers</p> <pre><code>docker-compose events\n</code></pre>"}]}